<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<book xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1">
    <info>
        <title>Jegyzőkönyv</title>
        <author>
            <personname>Szilágyi-Czumbil Ede Balázs</personname>
            
            <personblurb><para>Neptun kód: CMY9W3</para></personblurb>
            <personblurb><para>Git repó:<link>https://github.com/edeszilagyi/Prog2</link></para></personblurb>
            <personblurb><para>e-mail: <email>ede.szilagyi@yahoo.com</email></para></personblurb>
            
            
        </author>
    </info>
    <part>
        <title/>
        <chapter>
            <title>0. hét - „Helló, Berners-Lee!</title>
            <sect1>
                <title>Java, C++ összehasonlítás</title>
                <para>Könyvek:C++: Benedek Zoltán, Levendovszky Tihamér Szoftverfejlesztés C++
                    nyelven Java: Nyékyné Dr. Gaizler Judit et al. Java 2 útikalauz programozóknak
                    5.0 I-II</para>
                <para>A Java nyelv teljesen objektum orientált nyelv. Ezzel szemben a C++ lehetőséget ad a generikus programozásra is. 
                    A két programnyelv változó kezelése eltérő. Java esetén minden objektum referencia. Ez azt
                    jelenti, hogy az értéküket közvetlen a referencián keresztül érjük el. Mindkét nyelv támogatja a publikus, privát és statikus objektum kezelést.
                    Fordító szempontjából amíg a C++ kódot elég natívan fordítani, addig a Java-hoz szükség van egy virtuális
                    fordítóra, ami futtatja a kódot. Emiatt nagyobb az eroforrás igénye is.Java-ban nem nagyon kell foglalkozni a memória szeméttel, mivel van automatikus garbage collector, ami
                    üríti azt, míg C++-nál fel kell szabadítani a memóriát
                </para>
            </sect1>
            <sect1>
                <title>Python</title>
                <para>Könyv: Forstner Bertalan, Ekler Péter, Kelényi Imre: Bevezetés a mobilprogramozásba.
                    Gyors prototípus-fejlesztés Python és Java nyelven</para>
                <para>  A Python tulajdonképpen egy szkriptnyelv, de nagyon sok csomagot is és beépített
                    eljárást is tartalmaz, ezért komolyabb alkalmazások megírására és komolyabb problémák
                    megoldására is használható.Más modulokkal is együtt tud működni egy Python komponens. A
                    Python egy nagyon magas szintű programozási nyelv.  Pyton esetén nincs szükség
                    fordítás-ra. A Python interpreter elérhető számos platformon. A Pythont könyű hasznáni,
                    megbízható és jelentős támogatást biztosít hibák javítására. A Pythonban minden adat
                    objektumként szerepel. A rajtuk végzendő műveleteket az objektum típusa határozza meg,
                    amit a rendszer futási idoben határoz meg, így nekünk nem kell megadni. A következő
                    típusok lehetnek: szám, string, tuple, list, dictionary. A számok lehetnek egészek,
                    decimálisak, oktálisak vagy akár hexadecimálisak is. Szöveg típus esetén a szöveget két
                    aposztróf közé írva kell megadni.</para>
            </sect1>
        </chapter>
        <chapter>
            <title>1. hét - „Helló, Arroway!”</title>
            <sect1>
                <title>OO szemlélet</title>
                <para>A módosított polártranszformációs normális generátor beprogramozása Java nyelven. Mutassunk rá, hogy
                    a mi természetes saját megoldásunk (az algoritmus egyszerre két normálist állít elo, kell egy példánytag, ˝
                    amely a nem visszaadottat tárolja és egy logikai tag, hogy van-e tárolt vagy futtatni kell az algot.) és az
                    OpenJDK, Oracle JDK-ban a Sun által adott OO szervezés ua.!
                    Segédlink: <link>https://arato.inf.unideb.hu/batfai.norbert/UDPROG/deprecated/Prog1_5.pdf</link> (16-22 fólia)</para>
                <para>A feladat lényege, hogy készítsünk egy olyan Java programot, amely két normális eloszlású számot állít elo˝
                    és hasonlítsuk össze a JDK fejleszto álltal készített polártranszformációs algoritmussal. </para>
                <para>A kód:</para>
                <programlisting>public class PolarGenerator {

	boolean nincsTarolt = true;
	double tarolt;
	
	public PolarGenerator() {
		nincsTarolt = true;
	}
	
	public double kovetkezo() {
		if(nincsTarolt) {
			double u1, u2, v1, v2, w;
			do {
				u1 = Math.random();
				u2 = Math.random();
				
				v1 = 2 * u1 - 1;
				v2 = 2 * u2 - 1;
				
				w = v1 * v1 + v2 * v2;
			} while(w > 1);
			double r = Math.sqrt(-2 * Math.log(w) / w);
			
			tarolt = r * v2;
			
			nincsTarolt = !nincsTarolt;
			return r * v1;
		} else {
			nincsTarolt = !nincsTarolt;
			return tarolt;
		}
	}
	
	public static void main(String[] args) {
		PolarGenerator pg = new PolarGenerator();
		
		for(int i = 0; i &lt; 10; i++) {
			System.out.println(pg.kovetkezo());
		}
	}
}
</programlisting>
                <para>Miután futtatuk:</para>
                <para><inlinemediaobject>
                    <imageobject>
                        <imagedata fileref="kepek/oomegold.jpg"/>
                    </imageobject>
                </inlinemediaobject></para>
                
            </sect1>
            <sect1>
                <title>„Gagyi”:</title>
                <para>Az ismert formális2 „while (x &lt;= t &amp;&amp; x >= t &amp;&amp; t != x);”
                    tesztkérdéstípusra adj a szokásosnál (miszerint x, t az egyik esetben az
                    objektum által hordozott érték, a másikban meg az objektum referenciája)
                    „mélyebb” választ, írj Java példaprogramot mely egyszer végtelen ciklus, más x,
                    t értékekkel meg nem! A példát építsd a JDK Integer.java forrására3 , hogy a
                    128-nál inkluzív objektum példányokat poolozza! </para>
                <para>a program ami végtelen ciklust ad:</para>
                <programlisting>public class Gagyi {

	public static void main(String[] args) {
		
		
		Integer i = 130;
		Integer j = 130;
		
		System.out.println("i = " + i + " j = " + j);

		while(i &lt;= j &amp;&amp; i >= j &amp;&amp; i != j) {
			
		}	
		
	}
}
</programlisting>
                <para>lefuttatva:</para>
                <para><inlinemediaobject>
                    <imageobject>
                        <imagedata fileref="kepek/gagyimegold1.png"/>
                    </imageobject>
                </inlinemediaobject></para>
                <para>a program ami nem végtelen ciklust ad:</para>
                <programlisting>public class Gagyi {

	public static void main(String[] args) {
		
		Integer i = 10;
		Integer j = 10;
		
		System.out.println("i = " + i + " j = " + j);

		while(i &lt;= j &amp;&amp; i >= j &amp;&amp; i != j) {
			
		}	
		
	}
}
</programlisting>
                <para>lefuttatva:</para>
                <para><inlinemediaobject>
                    <imageobject>
                        <imagedata fileref="kepek/gagyimegold2.png"/>
                    </imageobject>
                </inlinemediaobject></para>
                
            </sect1>
            <sect1>
                <title>Yoda</title>
                <para>Írjunk olyan Java programot, ami java.lang.NullPointerEx-el leáll, ha nem követjük a Yoda
                    conditions-t! <link>https://en.wikipedia.org/wiki/Yoda_conditions</link>
                </para>
                <para>A kód:</para>
                <programlisting>public class Yoda {

	public static void main(String[] args) {
		
		final String str = null;
		
		try {
			if(str.equals("...")) {
				//Do something
			}
			System.out.println("1. Success");

		} catch(Exception e) {
			System.err.println(e.getMessage());
		}

		try {
			if("...".equals(str)) {
				//Do something
			}
			System.out.println("2. Success");

		} catch(Exception e) {
			System.err.println(e.getMessage());
		}
	}
}
</programlisting>
                <para>Lefuttatva:</para>
                <para><inlinemediaobject>
                    <imageobject>
                        <imagedata fileref="kepek/yodamegold.jpg"/>
                    </imageobject>
                </inlinemediaobject></para>
            </sect1>
        </chapter>
    </part>
</book>
